#!/usr/bin/env python
# license removed for brevity
import rospy
from std_msgs.msg import Float64MultiArray
import time

def talker():
    pub = rospy.Publisher('/youbot_base/joints_vel_controller/command', Float64MultiArray, queue_size=10)
    rospy.init_node('talker', anonymous=True)
    rate = rospy.Rate(10)  # 10hz
    msg = Float64MultiArray()

    # 速度设置
    lspeed = 0.5  # 直线行驶速度
    angular_speed = 0.1  # 转弯速度
    side_length = 5  # 正六边形边长，单位：米
    side_time = side_length / lspeed  # 每边行驶时间
    turn_time = 60.0 / angular_velocity  # 转弯所需时间（60度）

    for _ in range (6):
        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [lspeed,-lspeed,lspeed,-lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [-0.216*lspeed,-lspeed,lspeed,0.216*lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [-lspeed,-0.216*lspeed,0.216*lspeed,lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()


        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [-lspeed,lspeed,-lspeed,lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [0.216*lspeed,lspeed,-lspeed,-0.216*lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [lspeed,0.216*lspeed,-0.216*lspeed,-lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

    # 停止所有轮子
    msg.data = [0, 0, 0, 0]
    pub.publish(msg)
    rospy.loginfo("Hexagon completed, stopping the robot.")

if __name__ == '__main__':
    try:
        talker()
    except rospy.ROSInterruptException:
        pass
