#!/usr/bin/env python
# license removed for brevity
import rospy
from std_msgs.msg import Float64MultiArray
import time
# joint_state

def talker():
    pub = rospy.Publisher('/youbot_base/joints_vel_controller/command', Float64MultiArray, queue_size=10)
    rospy.init_node('talker', anonymous=True)
    rate = rospy.Rate(10)  # 10hz
    msg = Float64MultiArray()

    R=1
    lspeed = 1
    aspeed = 1
    side_length =15
    side_time = 10
    
    turn_time = 4 / lspeed
    
    # 设置PID控制参数 Установите параметры ПИД-регулирования
    kp = 0.5  # 比例参数
    ki = 0.1  # 积分参数
    kd = 0.01  # 微分参数
    
    # 初始化误差和上一次误差	Ошибка инициализации и последняя ошибка
    error_sum_x = 0
    error_sum_y = 0
    last_error_x = 0
    last_error_y = 0
    

        # 计算误差和误差变化量
    error_x = R - 1  
    error_y = R - 1

    error_sum_x += error_x  
    error_sum_y += error_y

    delta_error_x = error_x - last_error_x
    delta_error_y = error_y - last_error_y
        
        
        # 计算线速度和角速度 Скорость линии x и y
    linear_vel_x = kp * error_x + ki * error_sum_x + kd * delta_error_x 

    linear_vel_y = kp * error_y + ki * error_sum_y + kd * delta_error_y 

    angular_vel = aspeed  #Угловая скорость
        
        # 计算各个轮子的转速	Рассчитаем скорость каждого колеса.
    speed1 = 1/R*(linear_vel_x+linear_vel_y) +  angular_vel  * R
    speed2 = 1/R*(linear_vel_x+linear_vel_y) +  angular_vel  * R
    speed3 = 1/R*(linear_vel_x+linear_vel_y) +  angular_vel  * R
    speed4 = 1/R*(linear_vel_x+linear_vel_y) +  angular_vel  * R

    for _ in range (6):
        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [lspeed,-lspeed,lspeed,-lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [-0.216*lspeed,-lspeed,lspeed,0.216*lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [-lspeed,-0.216*lspeed,0.216*lspeed,lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()


        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [-lspeed,lspeed,-lspeed,lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [0.216*lspeed,lspeed,-lspeed,-0.216*lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

        start_time = time.time()
        while time.time() - start_time < side_time:
           msg.data = [lspeed,0.216*lspeed,-0.216*lspeed,-lspeed]
        rospy.loginfo(msg)
        pub.publish(msg)
        rate.sleep()

    msg.data =[0,0,0,0]
    pub.publish(msg)
    rate.sleep()


if __name__ == '__main__':
    try:
        talker()
    except rospy.ROSInterruptException:
        pass
      
